import java.util.LinkedHashMap;
import java.util.Map;

public class Main {
    public static String firstNonRepeated(String s) {
        // Convert the string to lowercase to handle both uppercase and lowercase letters
        s = s.toLowerCase();

        // LinkedHashMap to maintain the order of insertion and store character occurrences
        Map<Character, Integer> charOccurrences = new LinkedHashMap<>();

        // Count the occurrences of each character in the string
        for (char c : s.toCharArray()) {
            charOccurrences.put(c, charOccurrences.getOrDefault(c, 0) + 1);
        }

        // Find the first non-repeated character in the string
        for (char c : charOccurrences.keySet()) {
            if (charOccurrences.get(c) == 1) {
                return String.valueOf(c);
            }
        }

        // If no non-repeated character is found, return an empty string
        return "";
    }

    public static void main(String[] args) {
        System.out.println(firstNonRepeated("hello, hi")); // Output: "e"
        System.out.println(firstNonRepeated("aabcc"));     // Output: "b"
        System.out.println(firstNonRepeated("aabbcc"));    // Output: ""
    }
}
